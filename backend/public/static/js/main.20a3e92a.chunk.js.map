{"version":3,"sources":["services/httpService.js","services/reviewService.js","services/userService.js","store/actions/userActions.js","pages/Home.jsx","store/actions/reviewActions.js","pages/LoginSignup.jsx","services/socketService.js","pages/Chat.jsx","services/cloudinaryService.js","cmps/Upload.jsx","pages/UserDetails.jsx","cmps/Header.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/reviewReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/reducers/index.js","store/store.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","reviewService","add","query","filterBy","queryStr","name","remove","reviewId","review","addedReview","userService","login","logout","signup","getUsers","getById","userId","update","getLoggedinUser","increaseScore","user","_id","_saveLocalUser","by","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","loadUsers","dispatch","type","users","_Home","state","reviewToEdit","txt","aboutUserId","handleChange","ev","target","value","setState","prevState","addReview","preventDefault","alert","props","onRemove","removeReview","canRemove","byUser","loggedInUser","isAdmin","this","loadReviews","className","reviews","map","onClick","to","aboutUser","fullname","onSubmit","onChange","Component","mapDispatchToProps","Home","connect","reviewModule","userModule","_LoginSignup","msg","loginCred","username","password","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","err","doSignup","signupCreds","removeUser","signupSection","placeholder","autoComplete","loginSection","isLoading","LoginSignup","systemModule","socketService","listenersMap","setup","terminate","on","eventName","cb","off","filter","l","emit","forEach","listener","debugMsg","from","createDummySocketService","_Chat","msgs","topic","isBotMode","addMsg","newMsg","sendBotResponse","timeout","clearTimeout","setTimeout","changeTopic","sendMsg","msgHandleChange","checked","idx","Chat","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","then","json","catch","error","Upload","imgUrl","height","width","isUploading","secure_url","previewStyle","backgroundImage","style","src","alt","htmlFor","uploadMsg","accept","id","UserDetails","match","_Header","exact","role","aria-label","Header","App","path","component","Boolean","hostname","initialState","localLoggedinUser","loggedinUser","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qRAEMA,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,QAC7BC,OAAOC,SAASC,OAAO,YAbnC,+D,sBCrBO,IAAMC,EAAgB,CAC3BC,I,4CACAC,MASF,SAAeC,GACb,IAAIC,EAAaD,EAAF,gBAA4BA,EAASE,KAArC,iBAAc,GAC7B,OAAOtB,EAAA,gBAAyBqB,KAVhCE,OAcF,SAAgBC,GACd,OAAOxB,EAAA,iBAA6BwB,M,4CAItC,WAAmBC,GAAnB,eAAArB,EAAA,sEAC4BJ,EAAA,SAA2ByB,GADvD,cACQC,EADR,yBAOSA,GAPT,4C,sBCzBA,IAEaC,EAAc,CACvBC,M,4CACAC,O,2CACAC,O,4CACAC,SAaJ,WAEI,OAAO/B,EAAA,SAdPgC,QAiBJ,SAAiBC,GAEb,OAAOjC,EAAA,eAAwBiC,KAlB/BV,OAoBJ,SAAgBU,GAEZ,OAAOjC,EAAA,eAA2BiC,KArBlCC,SACAC,kBACAC,c,qDAsBWF,E,8EAAf,WAAsBG,GAAtB,SAAAjC,EAAA,sEAEiBJ,EAAA,eAAwBqC,EAAKC,KAAOD,GAFrD,OAEIA,EAFJ,OAIQF,IAAkBG,MAAQD,EAAKC,KAAKC,EAAeF,GAJ3D,4C,kEAOA,0CAAAjC,EAAA,6DAA6BoC,EAA7B,+BAxCyB,IAyCfH,EAAOF,KACRM,MAAQJ,EAAKI,MAAQD,GAAMA,EAFpC,SAGUN,EAAOG,GAHjB,gCAIWA,EAAKI,OAJhB,4C,kEAOA,WAAqBC,GAArB,eAAAtC,EAAA,sEAKuBJ,EAAiB,aAAc0C,GALtD,YAKUL,EALV,iDAMqBE,EAAeF,IANpC,4C,kEAQA,WAAsBK,GAAtB,eAAAtC,EAAA,sEAEuBJ,EAAiB,cAAe0C,GAFvD,cAEUL,EAFV,yBAGWE,EAAeF,IAH1B,4C,kEAKA,sBAAAjC,EAAA,6DACIuC,eAAeC,QADnB,SAEiB5C,EAAiB,eAFlC,oF,sBAIA,SAASuC,EAAeF,GAEpB,OADAM,eAAeE,QAAQ,eAAgBC,KAAKC,UAAUV,IAC/CA,EAGX,SAASF,IACL,OAAOW,KAAKE,MAAML,eAAeM,QAAQ,iBCnEtC,SAASC,IACd,8CAAO,WAAMC,GAAN,eAAA/C,EAAA,sEAEH+C,EAAS,CAAEC,KAAM,kBAFd,SAGiBzB,EAAYI,WAH7B,OAGGsB,EAHH,OAIHF,EAAS,CAAEC,KAAM,YAAaC,UAJ3B,gDAMH5C,QAAQC,IAAI,gCAAZ,MANG,yBAQHyC,EAAS,CAAEC,KAAM,iBARd,4EAAP,sDDUFtC,OAAOa,YAAcA,E,IETf2B,E,4MACJC,MAAQ,CACNC,aAAc,CACZC,IAAK,GACLC,YAAa,K,EAQjBC,aAAe,SAAAC,GAAO,IAAD,EACKA,EAAGC,OAAnBvC,EADW,EACXA,KAAMwC,EADK,EACLA,MACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,aAAa,2BACRQ,EAAUR,cADH,kBAETlC,EAAOwC,S,EAKdG,U,uCAAY,WAAML,GAAN,eAAAxD,EAAA,yDACVwD,EAAGM,kBACKV,EAAiB,EAAKD,MAAtBC,cACUC,KAAQD,EAAaE,YAH7B,yCAGiDS,MAAM,4BAHvD,uBAIJ,EAAKC,MAAMH,UAAU,EAAKV,MAAMC,cAJ5B,OAKV,EAAKO,SAAS,CAAEP,aAAc,CAAEC,IAAK,GAAIC,YAAa,MAL5C,2C,wDAQZW,S,uCAAW,WAAM7C,GAAN,SAAApB,EAAA,sEACH,EAAKgE,MAAME,aAAa9C,GADrB,2C,wDAKX+C,UAAY,SAAA9C,GAAM,eACfA,EAAO+C,OAAOlC,OAAd,UAAsB,EAAK8B,MAAMK,oBAAjC,aAAsB,EAAyBnC,OAA/C,UAAsD,EAAK8B,MAAMK,oBAAjE,aAAsD,EAAyBC,U,kEA5BhFC,KAAKP,MAAMQ,cACXD,KAAKP,MAAMlB,c,+BA6BH,IAAD,OACP,OACE,sBAAK2B,UAAU,OAAf,UACE,oDACCF,KAAKP,MAAMU,SAAW,oBAAID,UAAU,cAAd,SACpBF,KAAKP,MAAMU,QAAQC,KAAI,SAAAtD,GAAM,OAC5B,+BACI,EAAK8C,UAAU9C,IACf,wBAAQuD,QAAS,kBAAM,EAAKX,SAAS5C,EAAOa,MAA5C,eACF,uCAEE,cAAC,IAAD,CAAM2C,GAAE,eAAUxD,EAAOyD,UAAU5C,KAAnC,SACGb,EAAOyD,UAAUC,cAGtB,6BAAK1D,EAAOgC,MAEZ,oCAEE,cAAC,IAAD,CAAMwB,GAAE,eAAUxD,EAAO+C,OAAOlC,KAAhC,SACGb,EAAO+C,OAAOW,gBAdZ1D,EAAOa,UAoBnBqC,KAAKP,MAAMf,OAASsB,KAAKP,MAAMK,cAC9B,uBAAMW,SAAUT,KAAKV,UAArB,UACE,yBACEoB,SAAUV,KAAKhB,aACfG,MAAOa,KAAKpB,MAAMC,aAAaE,YAC/BpC,KAAK,cAHP,UAKE,wBAAQwC,MAAM,GAAd,yBACCa,KAAKP,MAAMf,MAAM0B,KAAI,SAAA1C,GAAI,OACxB,wBAAuByB,MAAOzB,EAAKC,IAAnC,SACGD,EAAK8C,UADK9C,EAAKC,WAKtB,0BACEhB,KAAK,MACL+D,SAAUV,KAAKhB,aACfG,MAAOa,KAAKpB,MAAMC,aAAaC,MAEjC,+CAEJ,8B,GArFY6B,aAkGdC,EAAqB,CACzBX,YCtGK,WACL,8CAAO,WAAMzB,GAAN,eAAA/C,EAAA,+EAEmBa,EAAcE,QAFjC,OAEG2D,EAFH,OAGH3B,EAAS,CAAEC,KAAM,cAAe0B,YAH7B,gDAMHrE,QAAQC,IAAI,oCAAZ,MANG,yDAAP,uDDsGAwC,YACAe,UC5FK,SAAmBxC,GACxB,8CAAO,WAAM0B,GAAN,iBAAA/C,EAAA,+EAEuBa,EAAcC,IAAIO,GAFzC,cAEGC,EAFH,OAGHyB,EAAS,CAAEC,KAAM,aAAc3B,OAAQC,IAHpC,SAKiBC,EAAYS,gBAL7B,OAKGK,EALH,OAMHU,EAAS,CAAEC,KAAM,YAAaX,UAN3B,kDASHhC,QAAQC,IAAI,kCAAZ,MATG,0DAAP,uDD4FA4D,aC9EK,SAAsB9C,GAC3B,8CAAO,WAAM2B,GAAN,SAAA/C,EAAA,+EAEGa,EAAcM,OAAOC,GAFxB,OAGH2B,EAAS,CAAEC,KAAM,gBAAiB5B,aAH/B,+CAKHf,QAAQC,IAAI,qCAAZ,MALG,wDAAP,wDDgFW8E,EAAOC,aAdI,SAAAlC,GACtB,MAAO,CACLuB,QAASvB,EAAMmC,aAAaZ,QAC5BzB,MAAOE,EAAMoC,WAAWtC,MACxBoB,aAAclB,EAAMoC,WAAWlB,gBAUUc,EAAzBE,CAA6CnC,GErG3DsC,E,4MACJrC,MAAQ,CACNsC,IAAK,GACLC,UAAW,CACTC,SAAU,GACVC,SAAU,IAEZC,WAAY,CACVF,SAAU,GACVC,SAAU,GACVb,SAAU,K,EAQde,kBAAoB,SAAAtC,GAAO,IAAD,EACAA,EAAGC,OAAnBvC,EADgB,EAChBA,KAAMwC,EADU,EACVA,MACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1B8B,UAAU,2BACL9B,EAAU8B,WADN,kBAENxE,EAAOwC,S,EAKdqC,mBAAqB,SAAAvC,GAAO,IAAD,EACDA,EAAGC,OAAnBvC,EADiB,EACjBA,KAAMwC,EADW,EACXA,MACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BiC,WAAW,2BACNjC,EAAUiC,YADL,kBAEP3E,EAAOwC,S,EAKdsC,Q,uCAAU,WAAMxC,GAAN,qBAAAxD,EAAA,yDACRwD,EAAGM,iBADK,EAEuB,EAAKX,MAAMuC,UAAlCC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,SACbD,EAHG,yCAIC,EAAKhC,SAAS,CAAE8B,IAAK,gCAJtB,OAMFQ,EAAY,CAAEN,WAAUC,YAC9B,IACE,EAAK5B,MAAMxC,MAAMyE,GACjB,EAAKtC,SAAS,CAAE+B,UAAW,CAAEC,SAAU,GAAIC,SAAU,MACrD,MAAOM,GACP,EAAKvC,SAAS,CAAE8B,IAAK,6BAXf,2C,wDAeVU,S,uCAAW,WAAM3C,GAAN,uBAAAxD,EAAA,yDACTwD,EAAGM,iBADM,EAEgC,EAAKX,MAAM0C,WAA5CF,EAFC,EAEDA,SAAUC,EAFT,EAESA,SAAUb,EAFnB,EAEmBA,SACvBY,GAAaC,GAAab,EAHtB,yCAIA,EAAKpB,SAAS,CAAE8B,IAAK,6BAJrB,OAMHW,EAAc,CAAET,WAAUC,WAAUb,YAC1C,EAAKf,MAAMtC,OAAO0E,GAClB,EAAKzC,SAAS,CAAEkC,WAAY,CAAEF,SAAU,GAAIC,SAAU,GAAIb,SAAU,MAR3D,2C,wDAWXsB,WAAa,SAAAxE,GACX,EAAKmC,MAAMqC,WAAWxE,I,kEAlDtB0C,KAAKP,MAAMlB,c,+BAoDH,IAAD,OACHwD,EACF,uBAAM7B,UAAU,MAAMO,SAAUT,KAAK4B,SAArC,UACE,wCACA,uBACEnD,KAAK,OACL9B,KAAK,WACLwC,MAAOa,KAAKpB,MAAM0C,WAAWd,SAC7BE,SAAUV,KAAKwB,mBACfQ,YAAY,YACZC,aAAa,aAEf,uBACEtF,KAAK,WACL8B,KAAK,WACLU,MAAOa,KAAKpB,MAAM0C,WAAWD,SAC7BX,SAAUV,KAAKwB,mBACfQ,YAAY,WACZC,aAAa,qBAEf,uBACExD,KAAK,OACL9B,KAAK,WACLwC,MAAOa,KAAKpB,MAAM0C,WAAWF,SAC7BV,SAAUV,KAAKwB,mBACfQ,YAAY,WACZC,aAAa,aAEf,uBACA,+CAGAC,EACF,uBAAMhC,UAAU,MAAMO,SAAUT,KAAKyB,QAArC,UACE,uCACA,yBACE9E,KAAK,WACLwC,MAAOa,KAAKpB,MAAMuC,UAAUC,SAC5BV,SAAUV,KAAKuB,kBAHjB,UAKE,wBAAQpC,MAAM,GAAd,yBACCa,KAAKP,MAAMf,OAASsB,KAAKP,MAAMf,MAAM0B,KAAI,SAAA1C,GAAI,OAAI,wBAAuByB,MAAOzB,EAAK0D,SAAnC,SAA8C1D,EAAK8C,UAAtC9C,EAAKC,WAmBtE,8CAIImC,EAAiBE,KAAKP,MAAtBK,aACR,OACE,sBAAKI,UAAU,QAAf,UACE,gDAGA,4BAAIF,KAAKpB,MAAMsC,MACdpB,GACC,8BACE,0CACWA,EAAaU,SACtB,wBAAQH,QAASL,KAAKP,MAAMvC,OAA5B,0BAIJ4C,GAAgBoC,GAChBpC,GAAgBiC,EAElB,uBACA,yBAAS7B,UAAU,QAAnB,SACE,oCACE,4CACA,wBAAQG,QAASL,KAAKP,MAAMlB,UAA5B,2BACCyB,KAAKP,MAAM0C,WAAa,aACxBnC,KAAKP,MAAMf,OAAS,6BAElBsB,KAAKP,MAAMf,MAAM0B,KAAI,SAAA1C,GAAI,OACxB,+BACE,8BAAMS,KAAKC,UAAUV,EAAM,KAAM,KACjC,yBACE2C,QAAS,WACP,EAAKyB,WAAWpE,EAAKC,MAFzB,oBAKUD,EAAK0D,cAPR1D,EAAKC,sB,GA9JHgD,aAwLrBC,EAAqB,CACzB3D,MHrKK,SAAeyE,GACpB,8CAAO,WAAMlD,GAAN,eAAA/C,EAAA,+EAEgBuB,EAAYC,MAAMyE,GAFlC,OAEGhE,EAFH,OAGHc,EAAS,CAAEC,KAAM,WAAYf,SAH1B,gDAKH5B,QAAQC,IAAI,4BAAZ,MALG,yDAAP,uDGqKAmB,OHlJK,WACL,8CAAO,WAAMsB,GAAN,SAAA/C,EAAA,+EAEGuB,EAAYE,SAFf,OAGHsB,EAAS,CAAEC,KAAM,WAAYf,KAAM,OAHhC,+CAKH5B,QAAQC,IAAI,6BAAZ,MALG,wDAAP,uDGkJAoB,OH7JK,SAAgBuE,GACrB,8CAAO,WAAMlD,GAAN,eAAA/C,EAAA,+EAEgBuB,EAAYG,OAAOuE,GAFnC,OAEGhE,EAFH,OAGHc,EAAS,CAAEC,KAAM,WAAYf,SAH1B,gDAKH5B,QAAQC,IAAI,6BAAZ,MALG,yDAAP,uDG6JA+F,WHpLK,SAAoBxE,GACzB,8CAAO,WAAMkB,GAAN,SAAA/C,EAAA,+EAEGuB,EAAYJ,OAAOU,GAFtB,OAGHkB,EAAS,CAAEC,KAAM,cAAenB,WAH7B,+CAKHxB,QAAQC,IAAI,iCAAZ,MALG,wDAAP,uDGoLAwC,aAGW6D,EAActB,aAfH,SAAAlC,GACtB,MAAO,CACLF,MAAOE,EAAMoC,WAAWtC,MACxBoB,aAAclB,EAAMoC,WAAWlB,aAC/BqC,UAAWvD,EAAMyD,aAAaF,aAWkBvB,EAAzBE,CAA6CG,G,QCvM3DqB,G,MA4Bb,WACE,IAAIC,EAAe,GAyBnB,MAxBsB,CACpBC,MADoB,WAElBD,EAAe,IAEjBE,UAJoB,WAKlBzC,KAAKwC,SAEPE,GAPoB,SAOjBC,EAAWC,GACZL,EAAaI,GAAb,sBAA+BJ,EAAaI,IAAe,IAA3D,CAA+DC,KAEjEC,IAVoB,SAUhBF,EAAWC,GACRL,EAAaI,KAClBJ,EAAaI,GAAaJ,EAAaI,GAAWG,QAAO,SAAAC,GAAC,OAAIA,IAAMH,OAEtEI,KAdoB,SAcfL,EAAWpH,GACTgH,EAAaI,IAClBJ,EAAaI,GAAWM,SAAQ,SAAAC,GAC9BA,EAAS3H,OAGb4H,SApBoB,WAqBlBnD,KAAKgD,KAAK,cAAe,CAACI,KAAM,UAAWtE,IAAK,qBAnDzBuE,IAE7BlH,OAAOmG,cAAgBA,E,ICFjBgB,E,4MACJ1E,MAAQ,CACNsC,IAAK,CAAEpC,IAAK,IACZyE,KAAM,GACNC,MAAO,OACPC,WAAW,G,EAebC,OAAS,SAAAC,GACP,EAAKvE,UAAS,SAAAC,GAAS,MAAK,CAAEkE,KAAK,GAAD,mBAAMlE,EAAUkE,MAAhB,CAAsBI,QACpD,EAAK/E,MAAM6E,WAAW,EAAKG,mB,EAGjCA,gBAAkB,WAEhB,EAAKC,SAAWC,aAAa,EAAKD,SAClC,EAAKA,QAAUE,YAAW,WACxB,EAAK3E,UAAS,SAAAC,GAAS,MAAK,CAAEkE,KAAK,GAAD,mBAAMlE,EAAUkE,MAAhB,CAAsB,CAAEH,KAAM,MAAOtE,IAAK,4BAC3E,O,EAGLkF,YAAc,WACZ1B,EAAcU,KAAK,aAAc,EAAKpE,MAAM4E,Q,EAG9CS,QAAU,SAAAhF,GAAO,IAAD,EACdA,EAAGM,iBACH,IAAM6D,GAAO,YAAK3D,MAAMK,oBAAX,eAAyBU,WAAY,KAClD8B,EAAcU,KAAK,cAAe,CAAEI,OAAMtE,IAAK,EAAKF,MAAMsC,IAAIpC,MAC9D,EAAKM,SAAS,CAAE8B,IAAK,CAAEkC,KAAM,KAAMtE,IAAK,O,EAG1CE,aAAe,SAAAC,GAAO,IAAD,EACKA,EAAGC,OAAnBvC,EADW,EACXA,KAAMwC,EADK,EACLA,MACd,EAAKC,SAAL,eAAiBzC,EAAOwC,GAAS,EAAK6E,c,EAGxCE,gBAAkB,SAAAjF,GAAO,IAAD,EACEA,EAAGC,OAAnBvC,EADc,EACdA,KAAMwC,EADQ,EACRA,MACd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACL6B,IAAI,2BACC7B,EAAU6B,KADZ,kBAEAvE,EAAOwC,S,kEA9CdmD,EAAcE,QACdF,EAAcU,KAAK,aAAchD,KAAKpB,MAAM4E,OAC5ClB,EAAcI,GAAG,cAAe1C,KAAK0D,U,6CAIrCpB,EAAcO,IAAI,cAAe7C,KAAK0D,QACtCpB,EAAcG,YACdqB,aAAa9D,KAAK6D,W,+BA4CV,IAAD,OACP,OACE,sBAAK3D,UAAU,OAAf,UACE,kDAAqBF,KAAKpB,MAAM4E,SAChC,kCACE,uBACE/E,KAAK,WACL9B,KAAK,YACLwH,QAASnE,KAAKpB,MAAM6E,UACpB/C,SAAU,SAACzB,GAAD,OAAQ,EAAKG,SAAS,CAAEqE,UAAWxE,EAAGC,OAAOiF,aAL3D,cASA,gCACE,kCACE,uBACE1F,KAAK,QACL9B,KAAK,QACLwC,MAAM,OACNgF,QAA8B,SAArBnE,KAAKpB,MAAM4E,MACpB9C,SAAUV,KAAKhB,eANnB,UAUA,kCACE,uBACEP,KAAK,QACL9B,KAAK,QACLwC,MAAM,WACNgF,QAA8B,aAArBnE,KAAKpB,MAAM4E,MACpB9C,SAAUV,KAAKhB,eANnB,iBAWF,uBAAMyB,SAAUT,KAAKiE,QAArB,UACE,uBACExF,KAAK,OACLU,MAAOa,KAAKpB,MAAMsC,IAAIpC,IACtB4B,SAAUV,KAAKkE,gBACfvH,KAAK,MACLsF,aAAa,QAEf,6CAEF,6BACGjC,KAAKpB,MAAM2E,KAAKnD,KAAI,SAACc,EAAKkD,GAAN,OACnB,+BAAelD,EAAIkC,KAAnB,KAA2BlC,EAAIpC,MAAtBsF,e,GA5GDzD,aA4HP0D,EAAOvD,aARI,SAAAlC,GACtB,MAAO,CACLkB,aAAclB,EAAMoC,WAAWlB,gBAGR,GAGPgB,CAA6CwC,GChIpDgB,EAAoB,CAC/BC,UAEF,SAAmBtF,GACjB,IAEMuF,EAAU,0CAFG,YAEH,iBAEVC,EAAW,IAAIC,SAIrB,OAHAD,EAASE,OAAO,OAAQ1F,EAAGC,OAAO0F,MAAM,IACxCH,EAASE,OAAO,gBALI,YAObE,MAAML,EAAY,CACvB9I,OAAQ,OACRoJ,KAAML,IAELM,MAAK,SAAAlJ,GAAG,OAAIA,EAAImJ,UAChBD,MAAK,SAAAlJ,GAGJ,OAFAC,QAAQC,IAAIF,GAELA,KAERoJ,OAAM,SAAAtD,GAAG,OAAI7F,QAAQoJ,MAAMvD,QCnBzB,IAAMwD,EAAb,4MACEvG,MAAQ,CACNwG,OAAQ,KACRC,OAAQ,IACRC,MAAO,IACPC,aAAa,GALjB,EAOEhB,UAPF,uCAOc,WAAOtF,GAAP,qBAAAxD,EAAA,6DACV,EAAK2D,SAAS,CAAEmG,aAAa,IADnB,SAEkCjB,EAAkBC,UAAUtF,GAF9D,gBAEFuG,EAFE,EAEFA,WAAYH,EAFV,EAEUA,OAAQC,EAFlB,EAEkBA,MAC5B,EAAKlG,SAAS,CAAEmG,aAAa,EAAOH,OAAQI,EAAYH,SAAQC,UAHtD,2CAPd,6GAiBY,IAAD,EAC2BtF,KAAKpB,MAA/BwG,EADD,EACCA,OAAQE,EADT,EACSA,MAAOD,EADhB,EACgBA,OACjBI,EAAe,CACnBC,gBAAgB,OAAD,OAASN,EAAT,KACfE,QACAD,UAEF,OACE,sBAAKnF,UAAU,iBAAiByF,MAAQF,EAAxC,UACE,qBAAKG,IAAI,GAAGC,IAAI,KAChB,uBAAOC,QAAQ,YAAf,SAA6B9F,KAAK+F,YAClC,uBAAOtH,KAAK,OAAOiC,SAAWV,KAAKuE,UAAYyB,OAAO,QAAQC,GAAG,mBA5BzE,gCAYmB,IAAD,EACkBjG,KAAKpB,MAA7BwG,EADM,EACNA,OAAQG,EADF,EACEA,YAChB,OAAIH,EAAe,kBACZG,EAAc,gBAAkB,mBAf3C,GAA4B5E,aCEfuF,EAAb,4MACEtH,MAAQ,CACNlB,KAAO,MAFX,kMAKuBV,EAAYK,QAAQ2C,KAAKP,MAAM0G,MAAMvK,OAAOqK,IALnE,OAKUvI,EALV,OAMIsC,KAAKZ,SAAS,CAAC1B,SANnB,qIAUI,OACE,0BAASwC,UAAU,eAAnB,UACE,8CACCF,KAAKpB,MAAMlB,MAAQ,gCAClB,6BACGsC,KAAKpB,MAAMlB,KAAK8C,WAEnB,8BACGrC,KAAKC,UAAU4B,KAAKpB,MAAMlB,KAAM,KAAM,QAG3C,cAAC,EAAD,WArBR,GAAiCiD,aCD3ByF,E,uKACQ,IACCtG,EAAgBE,KAAKP,MAArBK,aACP,OAAO,yBAAQI,UAAU,cAAlB,UACH,gCACI,cAAC,IAAD,CAASmG,OAAK,EAAC/F,GAAG,IAAlB,SAAsB,sBAAMgG,KAAK,MAAMC,aAAW,OAA5B,4BACtB,cAAC,IAAD,CAASjG,GAAG,SAAZ,mBACA,cAAC,IAAD,CAAS+F,OAAK,EAAC/F,GAAG,IAAlB,0BACA,cAAC,IAAD,CAASA,GAAG,QAAZ,0BAEHR,GAAgB,uBAAMI,UAAU,gBAAhB,UAEb,cAAC,IAAD,CAAMI,GAAE,eAAUR,EAAanC,KAA/B,SACKmC,EAAaU,WAGlB,+BAAOV,EAAahC,OAAS,c,GAhBvB6C,aA8BT6F,GAAS1F,aARE,SAAAlC,GACpB,MAAO,CACHkB,aAAclB,EAAMoC,WAAWlB,gBAGZ,GAGLgB,CAA6CsF,GCvB5D,SAASK,KACd,OACE,qBAAKvG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACsG,GAAD,IACA,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,YAAYC,UAAWT,IACnC,cAAC,IAAD,CAAOQ,KAAK,SAASC,UAAWvE,IAChC,cAAC,IAAD,CAAOsE,KAAK,QAAQC,UAAWtC,IAC/B,cAAC,IAAD,CAAOqC,KAAK,IAAIC,UAAW9F,SAG/B,kDCZY+F,QACW,cAA7BzK,OAAOC,SAASyK,UAEe,UAA7B1K,OAAOC,SAASyK,UAEhB1K,OAAOC,SAASyK,SAASV,MAAM,2D,6BCjB7BW,GAAe,CACnB3G,QAAS,ICDX,IAAI4G,GAAoB,KACpB/I,eAAegJ,eAAcD,GAAoB5I,KAAKE,MAAML,eAAegJ,eAE/E,IAAMF,GAAe,CACnBhH,aAAciH,GACdrI,MAAO,ICLT,IAAMoI,GAAe,CACnB3E,WAAW,GCIN,IAAM8E,GAAcC,aAAgB,CACzC7E,aDFK,WAA4D,IAApCzD,EAAmC,uDAA3BkI,GAAcK,EAAa,uDAAJ,GAC5D,OAAQA,EAAO1I,MACb,IAAK,gBACH,OAAO,2BAAKG,GAAZ,IAAmBuD,WAAW,IAChC,IAAK,eACH,OAAO,2BAAKvD,GAAZ,IAAmBuD,WAAW,IAChC,QAAS,OAAOvD,ICHlBmC,aHHK,WAA2D,IAApCnC,EAAmC,uDAA3BkI,GAAcK,EAAa,uDAAJ,GAC3D,OAAQA,EAAO1I,MACb,IAAK,cACH,OAAO,2BAAKG,GAAZ,IAAmBuB,QAASgH,EAAOhH,UACrC,IAAK,aACH,OAAO,2BAAKvB,GAAZ,IAAmBuB,QAAQ,GAAD,mBAAMvB,EAAMuB,SAAZ,CAAqBgH,EAAOrK,WACxD,IAAK,gBACH,OAAO,2BAAK8B,GAAZ,IAAmBuB,QAASvB,EAAMuB,QAAQ2C,QAAO,SAAAhG,GAAM,OAAIA,EAAOa,MAAQwJ,EAAOtK,cACnF,IAAK,gBACH,OAAO,2BACF+B,GADL,IAEEuB,QAASvB,EAAMuB,QAAQC,KAAI,SAAAtD,GAAM,OAC/BA,EAAOa,MAAQwJ,EAAOrK,OAAOa,IAAMwJ,EAAOrK,OAASA,OAEzD,QACE,OAAO8B,IGXXoC,WFAK,WAAyD,IAApCpC,EAAmC,uDAA3BkI,GAAcK,EAAa,uDAAJ,GACzD,OAAQA,EAAO1I,MACb,IAAK,WACH,OAAO,2BAAKG,GAAZ,IAAmBkB,aAAcqH,EAAOzJ,OAC1C,IAAK,cACH,OAAO,2BACFkB,GADL,IAEEF,MAAOE,EAAMF,MAAMoE,QAAO,SAAApF,GAAI,OAAIA,EAAKC,MAAQwJ,EAAO7J,YAE1D,IAAK,YACH,OAAO,2BAAKsB,GAAZ,IAAmBF,MAAOyI,EAAOzI,QACnC,IAAK,YACH,OAAO,2BAAKE,GAAZ,IAAmBkB,aAAa,2BAAMlB,EAAMkB,cAAb,IAA2BhC,MAAOqJ,EAAOrJ,UAC1E,QACE,OAAOc,MGjBPwI,GAAmBjL,OAAOkL,sCAAwCC,KAE3DC,GAAQC,aACnBP,GACAG,GAAiBK,aAAgBC,QCGpBC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAACd,GAAD,MAEF4B,SAASC,eAAe,SPkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1D,MAAK,SAAC2D,GACLA,EAAaC,gBAEd1D,OAAM,SAACC,GACNpJ,QAAQoJ,MAAMA,EAAM0D,YO7G5BjB,O","file":"static/js/main.20a3e92a.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\n// import userService from './userService'\r\n// import { utilService } from './utilService'\r\n\r\nexport const reviewService = {\r\n  add,\r\n  query,\r\n  remove\r\n}\r\n\r\n\r\n// More ways to send query params:\r\n// return axios.get('api/toy/?id=1223&balance=13')\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}})\r\n\r\nfunction query(filterBy) {\r\n  var queryStr = (!filterBy) ? '' : `?name=${filterBy.name}&sort=anaAref`\r\n  return httpService.get(`review${queryStr}`)\r\n  // return storageService.query('review')\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  return httpService.delete(`review/${reviewId}`)\r\n  // return storageService.delete('review', reviewId)\r\n\r\n}\r\nasync function add(review) {\r\n  const addedReview = await httpService.post(`review`, review)\r\n\r\n  // review.byUser = userService.getLoggedinUser()\r\n  // review.aboutUser = await userService.getById(review.aboutUserId)\r\n  // const addedReview = storageService.post('review', review)\r\n\r\n  return addedReview\r\n}\r\n","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadReviews, addReview, removeReview } from '../store/actions/reviewActions.js'\r\nimport { loadUsers } from '../store/actions/userActions.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass _Home extends Component {\r\n  state = {\r\n    reviewToEdit: {\r\n      txt: '',\r\n      aboutUserId: ''\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.loadReviews()\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      reviewToEdit: {\r\n        ...prevState.reviewToEdit,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  addReview = async ev => {\r\n    ev.preventDefault()\r\n    const { reviewToEdit } = this.state\r\n    if (!reviewToEdit.txt || !reviewToEdit.aboutUserId) return alert('All fields are required')\r\n    await this.props.addReview(this.state.reviewToEdit)\r\n    this.setState({ reviewToEdit: { txt: '', aboutUserId: '' } })\r\n  }\r\n\r\n  onRemove = async reviewId => {\r\n    await this.props.removeReview(reviewId)\r\n    // this.props.history.push('/login')\r\n  }\r\n\r\n  canRemove = review =>\r\n    (review.byUser._id === this.props.loggedInUser?._id || this.props.loggedInUser?.isAdmin)\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h1>Reviews and Gossip</h1>\r\n        {this.props.reviews && <ul className=\"review-list\">\r\n          {this.props.reviews.map(review => (\r\n            <li key={review._id}>\r\n              { this.canRemove(review) &&\r\n                <button onClick={() => this.onRemove(review._id)}>X</button>}\r\n              <p>\r\n                About:\r\n                <Link to={`user/${review.aboutUser._id}`}>\r\n                  {review.aboutUser.fullname}\r\n                </Link>\r\n              </p>\r\n              <h3>{review.txt}</h3>\r\n\r\n              <p>\r\n                By:\r\n                <Link to={`user/${review.byUser._id}`}>\r\n                  {review.byUser.fullname}\r\n                </Link>\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>}\r\n        {this.props.users && this.props.loggedInUser &&\r\n          <form onSubmit={this.addReview}>\r\n            <select\r\n              onChange={this.handleChange}\r\n              value={this.state.reviewToEdit.aboutUserId}\r\n              name=\"aboutUserId\"\r\n            >\r\n              <option value=\"\">Select User</option>\r\n              {this.props.users.map(user => (\r\n                <option key={user._id} value={user._id}>\r\n                  {user.fullname}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <textarea\r\n              name=\"txt\"\r\n              onChange={this.handleChange}\r\n              value={this.state.reviewToEdit.txt}\r\n            ></textarea>\r\n            <button>Submit</button>\r\n          </form>}\r\n        <hr />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    reviews: state.reviewModule.reviews,\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  loadReviews,\r\n  loadUsers,\r\n  addReview,\r\n  removeReview\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n","import { reviewService } from '../../services/reviewService'\r\nimport { userService } from '../../services/userService'\r\n\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch({ type: 'ADD_REVIEW', review: addedReview })\r\n\r\n      const score = await userService.increaseScore()\r\n      dispatch({ type: 'SET_SCORE', score })\r\n      \r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch({ type: 'REMOVE_REVIEW', reviewId })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions'\r\n\r\nclass _LoginSignup extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"frm\" onSubmit={this.doSignup}>\r\n        <h2>Signup</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullname\"\r\n          value={this.state.signupCred.fullname}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Full name\"\r\n          autoComplete=\"fullname\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n          autoComplete=\"username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    )\r\n    let loginSection = (\r\n      <form className=\"frm\" onSubmit={this.doLogin}>\r\n        <h2>Login</h2>\r\n        <select\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n        >\r\n          <option value=\"\">Select User</option>\r\n          {this.props.users && this.props.users.map(user => <option key={user._id} value={user.username}>{user.fullname}</option>)}\r\n        </select>\r\n\r\n        {/* <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.loginCred.username}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br /> */}\r\n        <button>Login</button>\r\n      </form>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"login\">\r\n        <h1>\r\n          Login / Signup\r\n        </h1>\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h3>\r\n              Welcome {loggedInUser.fullname}\r\n              <button onClick={this.props.logout}>Logout</button>\r\n            </h3>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n\r\n        <hr />\r\n        <section className=\"admin\">\r\n          <details>\r\n            <summary>Admin</summary>\r\n            <button onClick={this.props.loadUsers}>Refresh Users</button>\r\n            {this.props.isLoading && 'Loading...'}\r\n            {this.props.users && <ul>\r\n\r\n              {this.props.users.map(user => (\r\n                <li key={user._id}>\r\n                  <pre>{JSON.stringify(user, null, 2)}</pre>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.removeUser(user._id)\r\n                    }}\r\n                  >\r\n                    Remove {user.username}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>}\r\n          </details>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)\r\n","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log(x)}\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from '../services/socketService'\r\n\r\nclass _Chat extends Component {\r\n  state = {\r\n    msg: { txt: '' },\r\n    msgs: [],\r\n    topic: 'Love',\r\n    isBotMode: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    socketService.setup()\r\n    socketService.emit('chat topic', this.state.topic)\r\n    socketService.on('chat addMsg', this.addMsg)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('chat addMsg', this.addMsg)\r\n    socketService.terminate()\r\n    clearTimeout(this.timeout)\r\n  }\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }))\r\n    if (this.state.isBotMode) this.sendBotResponse();\r\n  }\r\n\r\n  sendBotResponse = () => {\r\n    // Handle case: send single bot response (debounce).\r\n    this.timeout && clearTimeout(this.timeout)\r\n    this.timeout = setTimeout(() => {\r\n      this.setState(prevState => ({ msgs: [...prevState.msgs, { from: 'Bot', txt: 'You are amazing!' }] }))\r\n    }, 1500)\r\n  }\r\n\r\n  changeTopic = () => {\r\n    socketService.emit('chat topic', this.state.topic)\r\n  }\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault()\r\n    const from = this.props.loggedInUser?.fullname || 'Me'\r\n    socketService.emit('chat newMsg', { from, txt: this.state.msg.txt })\r\n    this.setState({ msg: { from: 'Me', txt: '' } })\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState({ [name]: value }, this.changeTopic)\r\n  }\r\n\r\n  msgHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <h2>Lets Chat about {this.state.topic}</h2>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"isBotMode\"\r\n            checked={this.state.isBotMode}\r\n            onChange={(ev) => this.setState({ isBotMode: ev.target.checked })}\r\n          />\r\n          Bot Mode\r\n        </label>\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Love\"\r\n              checked={this.state.topic === 'Love'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Love\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Politics\"\r\n              checked={this.state.topic === 'Politics'}\r\n              onChange={this.handleChange}\r\n            />\r\n            Politics\r\n          </label>\r\n        </div>\r\n        <form onSubmit={this.sendMsg}>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.msg.txt}\r\n            onChange={this.msgHandleChange}\r\n            name=\"txt\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n        <ul>\r\n          {this.state.msgs.map((msg, idx) => (\r\n            <li key={idx}>{msg.from}: {msg.txt}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Chat = connect(mapStateToProps, mapDispatchToProps)(_Chat)\r\n","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\nfunction uploadImg(ev) {\r\n  const CLOUD_NAME = 'dcwibf9o5'\r\n  const PRESET_NAME = 'vt0iqgff'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', ev.target.files[0])\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return fetch(UPLOAD_URL, {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res)\r\n\r\n      return res\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n","import { Component } from 'react'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\n\r\nexport class Upload extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 500,\r\n    width: 500,\r\n    isUploading: false\r\n  }\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await cloudinaryService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width })\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n    const { imgUrl, width, height } = this.state\r\n    const previewStyle = {\r\n      backgroundImage: `url(${imgUrl})`,\r\n      width,\r\n      height\r\n    }\r\n    return (\r\n      <div className=\"upload-preview\" style={ previewStyle } >\r\n        <img src=\"\" alt=\"\" />\r\n        <label htmlFor=\"imgUpload\">{ this.uploadMsg }</label>\r\n        <input type=\"file\" onChange={ this.uploadImg } accept=\"img/*\" id=\"imgUpload\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Upload } from '../cmps/Upload'\r\n\r\nimport {userService} from '../services/userService'\r\n\r\nexport class UserDetails extends Component {\r\n  state = {\r\n    user : null\r\n  }\r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.id)\r\n    this.setState({user})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"user-details\">\r\n        <h1>User Details</h1>\r\n        {this.state.user && <div>\r\n          <h3>\r\n            {this.state.user.fullname}\r\n          </h3>\r\n          <pre>\r\n            {JSON.stringify(this.state.user, null, 2)}\r\n          </pre>\r\n        </div>}\r\n        <Upload />\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass _Header extends Component {\r\n    render() {\r\n        const {loggedInUser} = this.props;\r\n        return <header className=\"main-header\">\r\n            <nav>\r\n                <NavLink exact to=\"/\"><span role=\"img\" aria-label=\"logo\">🙏</span></NavLink>\r\n                <NavLink to=\"/login\">Login</NavLink>\r\n                <NavLink exact to=\"/\">User Reviews</NavLink>\r\n                <NavLink to=\"/chat\">Chat Room</NavLink>\r\n            </nav>\r\n            {loggedInUser && <span className=\"loggedin-user\">\r\n\r\n                <Link to={`user/${loggedInUser._id}`}>\r\n                    {loggedInUser.fullname}\r\n                </Link>\r\n                \r\n                <span>{loggedInUser.score || 0}</span>\r\n            </span>}\r\n        </header>\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { Home } from './pages/Home'\nimport { LoginSignup } from './pages/LoginSignup'\nimport { Chat } from './pages/Chat'\nimport { UserDetails } from './pages/UserDetails'\n\nimport { Header } from './cmps/Header'\n\n\nexport function App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Header></Header>\n        <main>\n          <Switch>\n            <Route path=\"/user/:id\" component={UserDetails} />\n            <Route path=\"/login\" component={LoginSignup} />\n            <Route path=\"/chat\" component={Chat} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </main>\n        <footer>\n          Starter\n        </footer>\n      </Router>\n    </div>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  reviews: [],\r\n}\r\n\r\nexport function reviewReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews }\r\n    case 'ADD_REVIEW':\r\n      return { ...state, reviews: [...state.reviews, action.review] }\r\n    case 'REMOVE_REVIEW':\r\n      return { ...state, reviews: state.reviews.filter(review => review._id !== action.reviewId) }\r\n    case 'UPDATE_REVIEW':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { reviewReducer } from './reviewReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  systemModule: systemReducer,\r\n  reviewModule: reviewReducer,\r\n  userModule: userReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/styles/main.scss'\nimport { store } from './store/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}